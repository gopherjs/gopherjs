// +build ignore

package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"os/exec"
	"strings"

	"github.com/gopherjs/gopherjs/compiler/prelude"
)

func main() {
	if err := run(); err != nil {
		log.Fatalln(err)
	}
}

func run() error {
	cmd := exec.Command("uglifyjs", "--config-file", "uglifyjs_options.json")
	cmd.Stdin = strings.NewReader(prelude.Prelude)

	out, err := cmd.CombinedOutput()
	if err != nil {
		return fmt.Errorf("failed to run uglifyjs: %v\n%s", err, string(out))
	}

	fn := "prelude_min.go"

	safeOut := strings.Replace(string(out), "`", "\\0060", -1)

	err = ioutil.WriteFile(fn, []byte(`// Code generated by genmin. DO NOT EDIT.

package prelude

// Minified is an uglifyjs-minified version of Prelude
const Minified = `+"`"+safeOut+"`\n"), 0644)

	if err != nil {
		return fmt.Errorf("failed to write to %v: %v", fn, err)
	}

	return nil
}
